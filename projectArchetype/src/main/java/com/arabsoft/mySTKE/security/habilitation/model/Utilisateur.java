package com.arabsoft.mySTKE.security.habilitation.model;

import java.util.ArrayList;

// Generated 25 janv. 2013 15:44:07 by Hibernate Tools 3.4.0.CR1

import java.util.Collection;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

import com.arabsoft.mySTKE.entity.Equipe;
import com.arabsoft.mySTKE.entity.EtudeRentabillite;
import com.arabsoft.mySTKE.entity.Fonction;
import com.arabsoft.mySTKE.entity.Notification;
import com.arabsoft.mySTKE.entity.Operation;
import com.arabsoft.mySTKE.entity.ReunionChantier;

/**
 * Personnel generated by hbm2java
 */
@Entity
@Table(name = "UTILSATEUR")
public class Utilisateur implements java.io.Serializable, UserDetails {

	@Id
	private String numMatrUser;
	@GeneratedValue(strategy=GenerationType.SEQUENCE)
	private int idUti;
	protected String username;
	protected String userLastname;
	protected Integer userStatus;
	@Column(name = "COD_STAT_USER", nullable = false, precision = 1, scale = 0)
	private boolean codStatUser;
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "utilisateur")
	private Set<UserRole> userRoles;
	// = new HashSet<UserRole>(0)
	private String password;
	private String nomUti;
	private String prenomUti;
	private String adresseUti;
	private String villeUti;
	private String telephoneUti;
	private String mailUti;
	@OneToMany(mappedBy = "utilisateur")
	private Set<ReunionChantier> reunionChantiers;
	@ManyToMany()
	private Set<Operation> operations;
	@OneToMany(mappedBy = "utilisateur")
	private Set<EtudeRentabillite> etudeRentabillites;
	@ManyToOne
	private Fonction fonction;
	@OneToMany(mappedBy = "utilisateur")
	private Set<Notification> notifications;
	@OneToMany(mappedBy = "utilisateur")
	private Set<Equipe> equipes;

	public Utilisateur() {

	}

	public Integer getUserStatus() {
		return userStatus;
	}

	public void setUserStatus(Integer userStatus) {
		this.userStatus = userStatus;
	}

	public Utilisateur(String numMatrUser) {

		this.numMatrUser = numMatrUser;
	}

	public Utilisateur(String numMatrUser, short codStrcStrc,
			boolean codStatUser, String codTypUser) {
		this.numMatrUser = numMatrUser;
		this.codStatUser = codStatUser;

	}

	public String getNumMatrUser() {
		return this.numMatrUser;
	}

	public void setNumMatrUser(String numMatrUser) {
		this.numMatrUser = numMatrUser;
	}

	public boolean isCodStatUser() {
		return this.codStatUser;
	}

	public void setCodStatUser(boolean codStatUser) {
		this.codStatUser = codStatUser;
	}

//	public Set<UserRole> getUserRoles() {
//		return this.userRoles;
//	}

	public void setUserRoles(Set<UserRole> userRoles) {
		this.userRoles = userRoles;
	}
	
	public List<UserRole> getUserRoles() {
		List<UserRole> u = new ArrayList<UserRole>();
		u.addAll(this.userRoles);
		return u;
	}

	@Transient
	@Override
	public Collection<GrantedAuthority> getAuthorities() {
		return getActivRoles();

	}

	@Transient
	public Set getActivRoles() {
		Set activRoles = new HashSet();
		Iterator it = getUserRoles().iterator();
		while (it.hasNext()) {
			UserRole userRole = (UserRole) it.next();
			if (userRole.getUserRoleSatus().equals(new Integer(1))) {
				activRoles.add(userRole.getProfil());
			}
		}
		return activRoles;
	}

	public void setUsername(String username) {
		this.numMatrUser = username;
	}

	@Transient
	public String getUsername() {
		return this.numMatrUser;
	}

	public void setPassword(String password) {
		this.password =password;
	}

	@Column(name="LIB_PASSWORD_USER")
	public String getPassword() {
		return this.password;
	}

	@Transient
	@Override
	public boolean isAccountNonExpired() {
		return true;
	}

	@Transient
	@Override
	public boolean isAccountNonLocked() {
		return true;
	}

	@Transient
	@Override
	public boolean isCredentialsNonExpired() {
		return true;
	}

	@Transient
	@Override
	public boolean isEnabled() {
		return true;
	}

	@Transient
	public String getUserLastname() {
		return userLastname;
	}

	public void setUserLastname(String userLastname) {
		this.userLastname = userLastname;
	}

	public String getNomUti() {
		return nomUti;
	}

	public void setNomUti(String nomUti) {
		this.nomUti = nomUti;
	}

	public String getPrenomUti() {
		return prenomUti;
	}

	public void setPrenomUti(String prenomUti) {
		this.prenomUti = prenomUti;
	}

	public String getAdresseUti() {
		return adresseUti;
	}

	public void setAdresseUti(String adresseUti) {
		this.adresseUti = adresseUti;
	}

	public String getVilleUti() {
		return villeUti;
	}

	public void setVilleUti(String villeUti) {
		this.villeUti = villeUti;
	}

	public String getTelephoneUti() {
		return telephoneUti;
	}

	public void setTelephoneUti(String telephoneUti) {
		this.telephoneUti = telephoneUti;
	}

	public String getMailUti() {
		return mailUti;
	}

	public void setMailUti(String mailUti) {
		this.mailUti = mailUti;
	}

	public Set<ReunionChantier> getReunionChantiers() {
		return reunionChantiers;
	}

	public void setReunionChantiers(Set<ReunionChantier> reunionChantiers) {
		this.reunionChantiers = reunionChantiers;
	}

	public Set<Operation> getOperations() {
		return operations;
	}

	public void setOperations(Set<Operation> operations) {
		this.operations = operations;
	}

	public Set<EtudeRentabillite> getEtudeRentabillites() {
		return etudeRentabillites;
	}

	public void setEtudeRentabillites(Set<EtudeRentabillite> etudeRentabillites) {
		this.etudeRentabillites = etudeRentabillites;
	}

	public Fonction getFonction() {
		return fonction;
	}

	public void setFonction(Fonction fonction) {
		this.fonction = fonction;
	}

	public Set<Notification> getNotifications() {
		return notifications;
	}

	public void setNotifications(Set<Notification> notifications) {
		this.notifications = notifications;
	}

	public Set<Equipe> getEquipes() {
		return equipes;
	}

	public void setEquipes(Set<Equipe> equipes) {
		this.equipes = equipes;
	}

	public int getIdUti() {
		return idUti;
	}

	public void setIdUti(int idUti) {
		this.idUti = idUti;
	}
	
	
	

}
